Doctest for class MyList in module 1-my_list. The class inherits from class list.
=================================================================================

First, import the class MyList from module 1-my_list
>>> MyList = __import__('1-my_list').MyList

---------------------------------------------------------------------------------
Test 0: Testing list method append

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>>

---------------------------------------------------------------------------------

Test 1: Testing class MyList method print_sorted with valid object

>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]
>>>

---------------------------------------------------------------------------------

Test 2: Testing list with 1 element

>>> list_one = [3]
>>> my_list = MyList(list_one)
>>> my_list.print_sorted()
[3]
>>>

---------------------------------------------------------------------------------

Test 3: Testing list with many elements

>>> list_many = [1, 4, 5, 8, 10, 50, 2, 500, 13, 104, 1024, 33, 8361, 3, 15, 333, 64, 65000, 71, 72445, 8839, 749, 993930, 87, 4, 775, 262, 300, 1995, 2627, 93839, 88474, 32234443332, 0]
>>> my_list = MyList(list_many)
>>> print(my_list)
[1, 4, 5, 8, 10, 50, 2, 500, 13, 104, 1024, 33, 8361, 3, 15, 333, 64, 65000, 71, 72445, 8839, 749, 993930, 87, 4, 775, 262, 300, 1995, 2627, 93839, 88474, 32234443332, 0]
>>> my_list.print_sorted()
[0, 1, 2, 3, 4, 4, 5, 8, 10, 13, 15, 33, 50, 64, 71, 87, 104, 262, 300, 333, 500, 749, 775, 1024, 1995, 2627, 8361, 8839, 65000, 72445, 88474, 93839, 993930, 32234443332]
>>>

---------------------------------------------------------------------------------

Test 4: Testing with a list negative numbers

>>> neg_list = [1, -5, 3, -50,  0, -3]
>>> my_list = MyList(neg_list)
>>> print(my_list)
[1, -5, 3, -50, 0, -3]
>>> my_list.print_sorted()
[-50, -5, -3, 0, 1, 3]
>>>

---------------------------------------------------------------------------------

Test 5: Testing a list with same elements

>>> my_list = MyList()
>>> my_list.append(3)
>>> my_list.append(3)
>>> my_list.append(3)
>>> my_list.append(3)
>>> my_list.append(3)
>>> my_list.print_sorted()
[3, 3, 3, 3, 3]
>>>

---------------------------------------------------------------------------------

Test 6: Testing an empty list object

>>> empty_list = []
>>> my_list = MyList(empty_list)
>>> my_list.print_sorted()
[]
>>>

---------------------------------------------------------------------------------

Test 7: Testing a list that is not an object of MyList

>>> my_list = [3, 11, 4]
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'print_sorted'
>>>

---------------------------------------------------------------------------------

Test 8: Testing an undefined object

>>> undef_obj.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'undef_obj' is not defined
>>>

---------------------------------------------------------------------------------
